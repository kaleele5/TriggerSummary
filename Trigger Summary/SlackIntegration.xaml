<Activity mc:Ignorable="sap sap2010" x:Class="SlackIntegration" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:eue="clr-namespace:Element5_Core.Utils.Exception;assembly=Element5.Core" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ubac="clr-namespace:UiPath.BAF.Activities.ContextModel;assembly=UiPath.Slack.Activities" xmlns:ube="clr-namespace:UiPath.BAF.Enums;assembly=UiPath.Slack" xmlns:ubme="clr-namespace:UiPath.BAF.Models.Entity;assembly=UiPath.Slack" xmlns:ubmr="clr-namespace:UiPath.BAF.Models.Response;assembly=UiPath.Slack" xmlns:ubmv="clr-namespace:UiPath.BAF.Models.Views;assembly=UiPath.Slack" xmlns:ubt="clr-namespace:UiPath.BAF.Telemetry;assembly=UiPath.Slack" xmlns:ucm="clr-namespace:UiPath.CodeGen.Model;assembly=UiPath.Slack" xmlns:ucmc="clr-namespace:UiPath.CodeGen.Models.Connection;assembly=UiPath.Slack" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usa="clr-namespace:UiPath.Slack.Activities;assembly=UiPath.Slack.Activities" xmlns:usam="clr-namespace:UiPath.Slack.Activities.Messages;assembly=UiPath.Slack.Activities" xmlns:use="clr-namespace:UiPath.Slack.Enums;assembly=UiPath.Slack" xmlns:usm="clr-namespace:UiPath.Slack.Models;assembly=UiPath.Slack" xmlns:usm1="clr-namespace:UiPath.Slack.Model;assembly=UiPath.Slack" xmlns:uss="clr-namespace:UiPath.Slack.Services;assembly=UiPath.Slack" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Required inputs in json" Name="FlowConfig" Type="InArgument(njl:JObject)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="trigger summary details stored in excel sheet path" Name="SendImage" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Image of excel sheet" Name="SummaryImgPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1732,1549</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SlackIntegration_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="76">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>ExcelRangeToImage.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.EasyImage</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Slack.Enums</x:String>
      <x:String>UiPath.BAF.Enums</x:String>
      <x:String>UiPath.Swagger.Models</x:String>
      <x:String>UiPath.CodeGen.Models.Connection</x:String>
      <x:String>UiPath.Slack.Models</x:String>
      <x:String>UiPath.BAF.Models.Connection</x:String>
      <x:String>UiPath.BAF.Models.Connection.APIConnection</x:String>
      <x:String>UiPath.BAF.Telemetry</x:String>
      <x:String>UiPath.BAF.Activities.ContextModel</x:String>
      <x:String>UiPath.BAF.Models</x:String>
      <x:String>UiPath.BAF.ServiceInterfaces</x:String>
      <x:String>UiPath.Slack.Activities</x:String>
      <x:String>UiPath.CodeGen.Activities</x:String>
      <x:String>UiPath.BAF.Activities</x:String>
      <x:String>UiPath.BAF.Models.Entity</x:String>
      <x:String>UiPath.BAF.Models.CrudOperation</x:String>
      <x:String>UiPath.BAF.Models.Response</x:String>
      <x:String>UiPath.Slack.Activities.Messages</x:String>
      <x:String>Element5_Core.Utils.Exception</x:String>
      <x:String>UiPath.Activities.System.Properties</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>ExcelRangeToImage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>BalaReva.EasyImage</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Slack</AssemblyReference>
      <AssemblyReference>UiPath.Slack.Activities</AssemblyReference>
      <AssemblyReference>Element5.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SlackIntegration" sap:VirtualizedContainerService.HintSize="1015,1484" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:Image" Name="Summary_image" />
      <Variable x:TypeArguments="x:String" Name="SlackToken" />
      <Variable x:TypeArguments="ubmr:ResponseStatus" Name="ResponseCode" />
      <Variable x:TypeArguments="x:String" Name="FilePath" />
      <Variable x:TypeArguments="x:String" Name="TextMessage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="953,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;Post Slack Message Process Started&quot;]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="953,52" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Getting the slack token from orchrestartor&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[FlowConfig(&quot;SlackSecretKey&quot;).ToString]" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="953,52" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[SlackToken]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <If sap2010:Annotation.AnnotationText="True - Save Image value as Image file in the directory&#xA;False - adding text message as &quot;There is no trigger available&quot;" Condition="[SendImage]" DisplayName="If - Checking Whether Need Send Image" sap:VirtualizedContainerService.HintSize="953,577" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Getting The File Path" sap:VirtualizedContainerService.HintSize="485,375" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="423,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[&quot;Saving the image in the directory&quot;]" />
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[FilePath]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[SummaryImgPath]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[TextMessage]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">Trigger Summary</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[FilePath]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[TextMessage]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">Trigger Summary  ----&gt;   Triggers Not Available</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="953,52" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Trace" Message="[&quot;Sending Slack Message&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <usa:SlackScopeActivity Connection="{x:Null}" DesignConnectionRequest="{x:Null}" ExistingConnection="{x:Null}" SelectedDesignAuthType="{x:Null}" SwaggerClient="{x:Null}" DesignConnectionEnabled="True" DisplayName="Slack Scope" ExistingConnectionType="usm:SlackConnection" sap:VirtualizedContainerService.HintSize="953,52" sap2010:WorkflowViewState.IdRef="SlackScopeActivity_1" RefreshCacheEnabled="False" Scopes="PublicChannels, PrivateChannels, DirectMessage, GroupMessage, Files, Users, Chat, UserGroups, Calls, DND, Emoji, Identity, Pins, Reminders, Reactions, Stars" SelectedAuthType="API Token" TelemetryEnabled="False" ThrowExceptionOnError="False">
      <usa:SlackScopeActivity.Body>
        <ActivityAction x:TypeArguments="ubac:ScopeActivityContext">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ubac:ScopeActivityContext" Name="ScopeActivityContext" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Sending The Image In Slack" sap:VirtualizedContainerService.HintSize="450,348" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <usam:SendMessage BusinessEntityName="{x:Null}" ScopeActivityType="{x:Null}" ConfiguredBusinessEntity="SendMessage" CrudOperation="Function" DesignConnectionEnabled="True" DisplayName="Send Message" sap:VirtualizedContainerService.HintSize="388,237" sap2010:WorkflowViewState.IdRef="SendMessage_1" Status="[ResponseCode]">
              <usam:SendMessage.BusinessEntity>
                <ubme:BusinessEntity AuthFields="{x:Null}" Connection="{x:Null}" Id="{x:Null}" Name="SendMessage">
                  <ubme:BusinessEntity.AllFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.AllFields>
                  <ubme:BusinessEntity.EntityMetadata>
                    <ubme:EntityMetadata Description="{x:Null}" Metadata="{x:Reference __ReferenceID0}" EligibleOperations="-1" IsCustomEntity="False" Name="SendMessage" />
                  </ubme:BusinessEntity.EntityMetadata>
                  <ubme:BusinessEntity.Metadata>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID0" />
                  </ubme:BusinessEntity.Metadata>
                  <ubme:BusinessEntity.SelectedFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.SelectedFields>
                  <ubme:BusinessEntity.TelemetryProperties>
                    <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                  </ubme:BusinessEntity.TelemetryProperties>
                </ubme:BusinessEntity>
              </usam:SendMessage.BusinessEntity>
              <usam:SendMessage.PopulatedAPIParameters>
                <scg:Dictionary x:TypeArguments="x:String, ubme:EntityField" />
              </usam:SendMessage.PopulatedAPIParameters>
              <usam:SendMessage.SelectedFields>
                <scg:List x:TypeArguments="ubme:EntityField" Capacity="8">
                  <ucm:CodeGenEntityField x:TypeArguments="use:ConversationType" ArgumentValue="{x:Null}" ContainingType="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" ArgumentDirection="In" ArgumentType="use:ConversationType" DataType="ConversationType" Description="The type of conversation you want to get messages from" DisplayName="Conversation Type" FieldName="Conversation Type" FormDataType="ComboBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="True">
                    <ucm:CodeGenEntityField.DefaultValue>
                      <use:ConversationType>Channel</use:ConversationType>
                    </ucm:CodeGenEntityField.DefaultValue>
                    <ucm:CodeGenEntityField.Value>
                      <use:ConversationType>Channel</use:ConversationType>
                    </ucm:CodeGenEntityField.Value>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField x:TypeArguments="x:String" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="The name of the channel" DisplayName="Channel Name" FieldName="Channel Name" FormDataType="TextBoxWithButton" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.Metadata>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <ube:WindowType x:Key="WindowType">FindObject</ube:WindowType>
                        <ubmv:FindObjectInput ParentQuery="{x:Null}" ParentQueryLabel="{x:Null}" Query="{x:Null}" x:Key="WindowTypeInput" IsMultiSelectAllowed="False" ObjectType="Channel" ReturnColumn="Name" ShouldLoadOnStart="False" WindowName="Channel">
                          <ubmv:FindObjectInput.ColumnsToShow>
                            <scg:List x:TypeArguments="x:String" Capacity="4">
                              <x:String>Id</x:String>
                              <x:String>Name</x:String>
                            </scg:List>
                          </ubmv:FindObjectInput.ColumnsToShow>
                          <ubmv:FindObjectInput.Metadata>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:String x:Key="ChannelTypesKey">public_channel,private_channel</x:String>
                            </scg:Dictionary>
                          </ubmv:FindObjectInput.Metadata>
                          <ubmv:FindObjectInput.QueryFilterColumns>
                            <scg:List x:TypeArguments="x:String" Capacity="4">
                              <x:String>Id</x:String>
                              <x:String>Name</x:String>
                            </scg:List>
                          </ubmv:FindObjectInput.QueryFilterColumns>
                        </ubmv:FindObjectInput>
                      </scg:Dictionary>
                    </ucm:CodeGenEntityField.Metadata>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField x:TypeArguments="x:String" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="The id of the channel" DisplayName="Channel ID" FieldName="Channel ID" FormDataType="ExpressionTextBox" InArgumentValue="[FlowConfig(&quot;SlackChannelId&quot;).ToString]" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:String">[FlowConfig("SlackChannelId").ToString]</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField x:TypeArguments="x:String" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="The message you want to send" DisplayName="Text" FieldName="Text" FormDataType="ExpressionTextBox" InArgumentValue="[TextMessage]" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:String">[TextMessage]</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField x:TypeArguments="x:String" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="The file you want to attach to your message" DisplayName="File" FieldName="File" FormDataType="FilePicker" InArgumentValue="[FilePath]" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:String">[FilePath]</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField x:TypeArguments="x:Boolean" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Boolean" DataType="Boolean" Description="Send this message as user or bot. Defaults to true (sends as user)" DisplayName="As User" FieldName="As User" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                  <ucm:CodeGenEntityField x:TypeArguments="usm1:Message" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="Out" ArgumentType="usm1:Message" DataType="Message" Description="The message that was sent" DisplayName="Message" FieldName="Message" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                </scg:List>
              </usam:SendMessage.SelectedFields>
              <usam:SendMessage.ServiceFactory>
                <uss:SlackServiceFactory />
              </usam:SendMessage.ServiceFactory>
              <usam:SendMessage.TelemetryProperties>
                <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
              </usam:SendMessage.TelemetryProperties>
            </usam:SendMessage>
          </Sequence>
        </ActivityAction>
      </usa:SlackScopeActivity.Body>
      <usa:SlackScopeActivity.ConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="4">
          <ucmc:ConnectionParam Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" Description="The OAuth Access Token" Mandatory="True" Name="API Token">
            <ucmc:ConnectionParam.ArgumentValue>
              <InArgument x:TypeArguments="x:String">[SlackToken]</InArgument>
            </ucmc:ConnectionParam.ArgumentValue>
          </ucmc:ConnectionParam>
        </scg:List>
      </usa:SlackScopeActivity.ConnectionParameters>
      <usa:SlackScopeActivity.DesignConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="0" />
      </usa:SlackScopeActivity.DesignConnectionParameters>
      <usa:SlackScopeActivity.ServiceFactory>
        <uss:SlackServiceFactory />
      </usa:SlackScopeActivity.ServiceFactory>
      <usa:SlackScopeActivity.SupportedAuthTypes>
        <scg:List x:TypeArguments="x:String" Capacity="4">
          <x:String>Existing Connection</x:String>
          <x:String>OAuth Authorization Code</x:String>
          <x:String>API Token</x:String>
        </scg:List>
      </usa:SlackScopeActivity.SupportedAuthTypes>
      <usa:SlackScopeActivity.TelemetryProperties>
        <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
      </usa:SlackScopeActivity.TelemetryProperties>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </usa:SlackScopeActivity>
    <If sap2010:Annotation.AnnotationText="True - Loggin as &quot;Successfully Posted Message In Slack&quot;&#xA;False - Throw exception as &quot;Failed To Send Slack Message&quot;" Condition="[ResponseCode.Success]" DisplayName="If - Checking The Response Code" sap:VirtualizedContainerService.HintSize="953,124" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Trace" Message="[&quot;Successfully Posted Message In Slack&quot;]" />
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Throw Exception" sap:VirtualizedContainerService.HintSize="450,376" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error" Message="[&quot;Failed To Send Slack Message&quot;]" />
          <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="388,133" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_1" MessageCode="[FlowConfig(&quot;ErrorMessage&quot;)(&quot;E004&quot;).ToString]" __Prefix="[IO.Directory.GetCurrentDirectory]">
            <eue:Throw_Business_Exception.ExtraMessage>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
              </InArgument>
            </eue:Throw_Business_Exception.ExtraMessage>
          </eue:Throw_Business_Exception>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;Post Slack Message Process Completed&quot;]" />
  </Sequence>
</Activity>